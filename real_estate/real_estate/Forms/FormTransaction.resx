<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>