<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Exit.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gwEDDgKI5rG/gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAADSSURBVEhL
        zZbLDcIwEETTAEgphytVcKYSDmmCDlIJfXBMAZyXN7EjiAiWF+zAk0aJvauZyM6vMbMWdWhApZCXPFsF
        6KQWnQKmK7+ivpDkJQYFTPRNIeQVLM3+J4D6Bh3jMIm8ZCiyAqht0WXsMjvF6bfQ4w7YodvYFUiGUH8E
        5ELvHmWFUPMHCPqzQpifLdHBqTN65iWEucU9+IZZCON1A5aWISXfEnmg37/JudD72W0aj6LOgxaP4nev
        CkG93svOi7yC5UoB1T+Z1T/6FX9brL0D35IL7tcuS8AAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gwECSESrT01WwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAIdSURBVFhH
        1Zc9SgNRFIUjpkqVDdgqCYg7ULAM2KXLBixdQjaQyjYg9lmBP52I4D5SiBbiAsbzzZxnMj/JTGLk4QcH
        Jufed+dl5r07M61/R5Ik+1JPOpdGFsd4+07bPSo+kG6kd2kVxMgZeNjvUbFT6UVaZi49SzOLY7xlGHPq
        MpujwW3pmkrmUxpLJ04pQcw55Aao0XZKMzSgKz0w2txJBw7XQq7HBKjVdXg9SuSfh5N/SZcObQxjXQOo
        WX8llBQuOwOPbG8NNVwLrm1XowQWXGDrf16EWlnJlDPbZRQMq/3O1s6gZlY6eZX2bC+QyT4HVnBpwckb
        SvfSsa0SxJwztPWDPBZm2B0XthfIpIHA2FYO+ZMsnLxJpUngOQYT2znks0Xh1laGDNpr6HCV+1x+R3pM
        MwqT4NgekNNxKId8+gR8SIu2rR/0cZjbqkTx0iSs2pMHFA8ds2crNXmYwLOtlSinOInGJwfl0Lbh3FZq
        8kSDma21KI9JPKUjMjiuPTkoj2cHjGxtNYHlyw7p7XB4LcqrnMAmt6B4z3NrwmkrUU7lLWi6CEsLzmo8
        CcUrF2GTbdiXcid3iFhxEn2Hcsiv3oYgo64RTbNw/uQBPMdgajuH/OpGBDLrWvGhdCWtXO3EnHNo6wd5
        61sxKBDvYQQKxH0cgxLivZCAkuK+koES472UBjQg3mv5Mhoc58OkiIrF+TQrouJxPk7/hlbrG0p7Kxhq
        EffuAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="btnCheck.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA3XAAAN1wFCKJt4AAAAB3RJ
        TUUH4gwFDC0TyPjvTwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAIySURBVEhL
        nZa7axRRFIfXFBJQDGpAjIqNrRaCoqiFMaig+A9oIQgqiMG3lSBoCkmXTgQhjW+0EBQLK/8EwQg+8EGs
        xPhARHwcv3Pv7+7O7MzuXvPBR/b+zj1nlpmdmTRyMLPFuB1HcR9uxfkqzw4GrMc7+Abr+IH3cI1aSpCv
        xrVatiDsx0v4G52/+AJv4Bj60GlMXFVrE7I9+BOnFUUI/FtPofMVD+MClUuQD+EOHFQUYJ2GOycVh8Iy
        nAmx2WNcqVI29BSHn1UcIXgYc7uMcxRnQ09x+BnFEYIDMbeXOE9xNvQUh59WHCEYxC/4BzcrzoaezsMd
        Qt/gXFeUDT3F4acUl6FwPtbtqKIs2F8c3vq1tEPxftxjmxQ1ITuE73BYUYB11+Fkt/BKWnxAP/+Vi0vm
        B3C+YzgIf4vDT4SNbag2kxbpALXPFnK/ex0/iJ/OXsOXxrJNpSCdoi0hqIHahbilyXGVKlDbFbfYtRSk
        i9yxyaF+Dr/hqKJatM+JP1k+7I5ruxmCLrCnTx87wp70RBhJwSL0Z5Bfhw0hnCX070TnEw4oDoX9ITZ7
        jv2K/wv6BvC9D4G9ilsQPog1m1CUDT19OBm6eV8oLkNhOX4OW8we4QqVusK+VfjEm+AjLlGpCsV1+Mx3
        gj8AD+JClUt4jsfQ7w/nKVZfke2wyV+Z4+gXPfEK/fa/iLfxNSZ+od8nczUiDxo24l18i3Wkg/b+1r1g
        iL8z/N+WI7gNa09blUbjHwjWVksc4bU2AAAAAElFTkSuQmCC
</value>
  </data>
</root>